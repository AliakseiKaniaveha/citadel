# Continuous Integration Pipeline for the project
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
#
# ssh to runner: just drop the step below to a place where you need to intervene;
# details: https://github.com/marketplace/actions/debugging-with-ssh
#
##debug begin
##by this step an SSH session will be created
##to continue workflow either just close the session or create an empty file with the name `continue` either in the
##root directory or in the workspace directory (`touch continue` or `sudo touch /continue`)
#- name: Setup upterm session
#  uses: lhotari/action-upterm@v1
##debug end
#

name: Quality Gates

on:
  pull_request:
    branches: [ master ]

jobs:
  is-bypassed-check:
    name: Bypass Check
    runs-on: ubuntu-latest
    outputs:
      is-bypassed: ${{ steps.check-if-bypassed.outputs.is-bypassed }}
    steps:
      - uses: actions/checkout@v2
      - id: changed-files
        uses: tj-actions/changed-files@v18.4
      - name: Is bypassed
        id: check-if-bypassed
        if: contains(steps.changed-files.outputs.all_changed_files, '.github/workflows/quality_gates.skip.reasons')
        run: |
          echo "::set-output name=is-bypassed::true"
          echo "Quality Gates bypassed"
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: is-bypassed-check
    if: needs.is-bypassed-check.outputs.is-bypassed != 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.2
          arguments: build -x test --info
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run Tests
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.2
          arguments: test --info
  ui-tests:
    name: UI tests
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.2
      - name: Start Application
        run: ./gradlew run &
      - name: Install Web Browser
        run: wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          && sudo dpkg -i google-chrome*.deb
          && google-chrome-stable -version
      - name: Run Tests
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.2
          arguments: uiTest --info -Dselenide.headless=true
  quality-gate:
    name: Go/No-Go
    runs-on: ubuntu-latest
    if: always()
    needs:
      - is-bypassed-check
      - unit-tests
      - ui-tests
    steps:
      - name: Quality Gates Report
        run: |
          echo "Unit Tests: ${{ toJSON(needs.unit-tests) }}"
          echo "UI Tests: ${{ toJSON(needs.ui-tests) }}"
      - name: Quality Gates bypassed
        if: ${{ needs.is-bypassed-check.outputs.is-bypassed == 'true' }}
        run: echo "Quality Gates bypassed, check quality_gates.skip.reasons content for reasoning"
      - name: Require all Quality Gates passed
        if: ${{
          needs.is-bypassed-check.outputs.is-bypassed != 'true' &&
          (needs.unit-tests.result != 'success' ||
          needs.ui-tests.result != 'success')
          }}
        run: |
          echo "Check outpup of the step above - one or more quality checks failed"
          exit 1
